body {
  font-size: 9pt;
  margin: 0 auto;
  max-width: 80em;
  font-family: Arial, Helvetica, sans-serif;
}

#titleHeading {
  text-align: center;
}

.panel {
  font-size: 1em;
  display: grid;
  margin-bottom: 1.5em;
  border: 1px solid;
  padding: 0 .5em .5em .5em;
  grid-gap: .5em;
}

.panelTitle {
  font-size: 1em;
  margin: 0 -.5em;
  padding: .2em .5em;
  border-bottom: 1px solid;
}

.panel label {
  align-self: center;
  font-weight: bold;
}

.panel input {
  border: 1px solid;
}

.panelGrid {
  display: grid;
  margin-left: -.5em;
  margin-right: -.5em;
  grid-gap: 0;
}

.panelGrid > label,
.panelGrid > div {
  padding-left: .5em;
  padding-right: .5em;
}

#authorizationSection {
  grid-template:
    "authorizationHeading authorizationHeading authorizationHeading authorizationHeading"
    "clientIDLabel clientIDInput clientIDInput clientIDInput"
    "redirectURILabel redirectURIInput redirectURIInput redirectURIInput"
    "authCodeLabel authCodeInput authCodeInput authCodeInput"
    ". getAuthCodeButton getTokenButton refreshTokenButton"
    / max-content auto auto auto;
}

#authorizationHeading {
  grid-area: authorizationHeading;
}

#clientIDLabel {
  grid-area: clientIDLabel;
}

#clientIDInput {
  grid-area: clientIDInput;
}

#redirectURILabel {
  grid-area: redirectURILabel;
}

#redirectURIInput {
  grid-area: redirectURIInput;
}

#authCodeLabel {
  grid-area: authCodeLabel;
}

#authCodeInput {
  grid-area: authCodeInput;
}

#getAuthCodeButton {
  grid-area: getAuthCodeButton;
}

#getTokenButton {
  grid-area: getTokenButton;
}

#refreshTokenButton {
  grid-area: refreshTokenButton;
}

#listSection {
  grid-row-gap: 0;
}

#listHeaderDiv {
  margin-top: .5em;
  border-top: 1px solid;
  border-bottom: 1px solid;
  grid-template-columns: repeat(8, 1fr);
}

#listHeaderDiv > label:first-child {
  border: none;
}

#listHeaderDiv > label {
  border-left: 1px solid;
  padding-top: .5em;
  padding-bottom: .5em;
}

.underlying {
  border-bottom: 1px solid;
  padding-top: .1em;
  padding-bottom: .1em;
  grid-template:
    "symbolValue lastValue lastValue last volmValue volmValue volm . exp exp expValue expValue expValue . . ."
    / 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
}

.underlying > .symbolValue {
  grid-area: symbolValue;
}

.underlying > .last {
  grid-area: last;
}

.underlying > .lastValue {
  grid-area: lastValue;
  text-align: right;
}

.underlying > .volm {
  grid-area: volm;
}

.underlying > .volmValue {
  grid-area: volmValue;
  text-align: right;
}

.underlying > .exp {
  grid-area: exp;
  text-align: right;
}

.underlying > .expValue {
  grid-area: expValue;
}

.option {
  border-bottom: 1px solid;
  padding-top: .05em;
  padding-bottom: .05em;
  grid-template-columns: repeat(8, 1fr);
}

.text.header,
.text {
  text-align: center;
}

.numeric.header,
.numeric {
  text-align: right;
}